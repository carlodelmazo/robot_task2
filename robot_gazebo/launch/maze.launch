<launch>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">

<env name="GAZEBO_RESOURCE_PATH" value="$(find robot_gazebo)/"/>

<arg name="world_name" value="$(find robot_gazebo)/worlds/maze.world"/> 

<!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->


    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>




  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find robot_description)/urdf/robot.urdf'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-x -1 -y -3 -z 0 -Y 2 -urdf -model robot -param robot_description"/>



</launch>
